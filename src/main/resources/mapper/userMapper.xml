<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.bitcamp.semiproj.dao.UserDao">

	<!-- 회원가입 -->
	<insert id="regUser" parameterType="UserDto">
		insert into user (user_id, password, name, nickname, gender , phone, email, birthday, register_date) 
		values (#{user_id},#{password},#{name},#{nickname},#{gender},#{phone},#{email},#{birthday},now());
	</insert>
	<!--로그인 인증 확인 -->
	<select id="login" parameterType="Map" resultType="int">
		select count(*) from user where user_id=#{user_id} and password=#{password}
	</select>
	<!--아이디 중복확인 -->
	<select id="getCheckId" parameterType="String" resultType="int">
		select count(*) from user where user_id=#{user_id}
	</select>
	<!--이메일 중복확인 -->
	<select id="getCheckEmail" parameterType="String" resultType="int">
		select count(*) from user where email=#{email}
	</select>
	<!-- 회원 이름 찾기 -->
	<select id="getSearchName" parameterType="String" resultType="String">
		select name from user where user_id=#{user_id}
	</select>
	<!-- 회원 ID 찾기 -->
	<select id="getSearchId" parameterType="Map" resultType="String">
		select ifnull(user_id, 0) from user where name = #{name} and email = #{email}; 
	</select>
	<!-- 회원 Password 찾기  -->
	<select id="getSearchPassword" parameterType="Map" resultType="String">
		select ifnull(password, 0) from user where user_id = #{user_id} and email = #{email}; 
	</select>
	<!-- 회원 임시 비밀번호-->
	<update id="temporaryPassword" parameterType="Map">
		update user set password = #{password} where user_id = #{user_id} and email = #{email}
	</update>
		<!-- Naver-->
	<select id="naverCheck" parameterType="Map">
		SELECT EMAIL,NICKNAME,NAVERLOGIN FROM user WHERE EMAIL = #{email}
	</select>
			<!-- 회원 임시 비밀번호-->
	<select id="naverLogin" parameterType="Map">
		SELECT EMAIL,NICKNAME FROM user WHERE EMAIL = #{email} AND NAVERLOGIN = #{id}
	</select>
	<!-- 네이버 회원가입 -->
	<insert id="naverReg" parameterType="Map">
		INSERT INTO user VALUES (#{email},#{nickname},#{password},#{phone},#{id})
	</insert>
		<!-- 정보 찾기 -->
	<select id="findkakao" parameterType="java.util.HashMap" resultType="KakaoDto">
		select * from kakao_table where k_name=#{nickname} and k_email=#{email}
	</select>
	<!-- 카카오 회원가입정보 저장 -->
	<insert id="kakaoInsert" parameterType="java.util.HashMap">
		INSERT INTO kakao_table (k_name,k_email) VALUES (#{nickname},#{email});
	</insert>
</mapper>